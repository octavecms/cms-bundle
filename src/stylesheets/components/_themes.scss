/**
 * Theme definitions
 * Changes color variables when used with .ui-... classnames
 */

@each $theme-name, $theme in $themes {
    $selector: map-get($theme, selector);
    $values: map-get($theme, values);

    #{ $selector } {
        @each $property, $color in $values {
            --color-#{ $property }: #{ color($color) };
            --color-#{ $property }-raw: #{ $color };
        }
    }
}


/**
 * Element colors
 */

body {
    color: var(--color-text);
}

h1, h2, h3, h4, h5 {
    color: var(--color-heading);
}

small,
.text-color-small {
    color: var(--color-small);
}

.ui-background {
    background: var(--color-background);
}
.ui-gray-background {
    background: color($color-gray-background);
}
.ui-dark-background {
    background: color($color-dark-background);
}


/**
 * For print reset theme to default
 */

@include media-breakpoint(print) {
    $selectors: ();
    $values: ();

    @each $theme-name, $theme in $themes {
        $selector: map-get($theme, selector);

        @if $selector == ':root' {
            $values: map-get($theme, values);
        } @else {
            $selectors: append($selectors, $selector);
        }
    }

    #{ zip($selectors) } {
        @each $property, $color in $values {
            --color-#{ $property }: #{ color($color) };
        }
    }

    .ui-gray-background,
    .ui-dark-background {
        background: color($color-light-background);
    }
}
