// Mixins are loaded after the configuration, explicitly load required functions here
@import "mixins/lib/map-get-deep";
@import "mixins/helpers/media";


/**
 * Layout order constants
 */

$z-index-content: unset;
$z-index-under-header: 9;
$z-index-header: 10;
$z-index-modal: 11;
$z-index-ajax-loader: 12;


/**
 * Percentage based grid system
 *
 * Grid system settings
 * All resolution styles cascade up from mobile to desktop
 *
 * @demo
 *   <div class="row">
 *      <div class="col col--xs-12 col--sm-6 col--md-9 col--lg-12 col--xl-12">Column</div>
 *      <div class="col col--xs-12 col--sm-6 col--md-9 col--lg-12 col--xl-12">Column</div>
 *   </div>
 *
 * @demo
 *   <div class="row row--pad">
 *      <div class="col col--xs-12 col--sm-6 col--md-9 col--lg-12 col--xl-12">Column with padding</div>
 *      <div class="col col--xs-12 col--sm-6 col--md-9 col--lg-12 col--xl-12">Column with padding</div>
 *   </div>
 *
 * @demo
 *   <div class="row">
 *      <div class="col col--xs-12 col--sm-6 offset--sm-6 col--md-9 offset--sm-9 col--lg-24 offset--lg-0">
 *        Column with left offset
 *      </div>
 *   </div>
 */

$grid-columns: (
    // Mobile portrait
    xs: (
        // Count
        columns: 12,
        // Full size, all column sum, must use number + unit
        unit: 100%,
        // Spacing between columns
        gutter: 10px,
    ),

    // Mobile landscape
    sm: (
        columns: 18,
        unit: 100%,
        gutter: 10px,
    ),

    // Tablet portrait
    md: (
        columns: 18,
        unit: 100%,
        gutter: 20px,
    ),

    // Tablet landscape + small desktop
    lg: (
        columns: 24,
        unit: 100%,
        gutter: 20px,
    ),

    // Large desktop, 1200+
    xl: (
        columns: 24,
        unit: 100%,
        gutter: 30px,
    ),

    // Very large desktop, 1440+
    xxl: (
        columns: 24,
        unit: 100%,
        gutter: 30px,
    ),

    // Extremely large desktop, 1920+
    // xxxl: (
    //     columns: 24,
    //     unit: 100%,
    //     gutter: 30px,
    // ),
);


/**
 * For each container is generated ".container-NAME" classname, except
 * for "default", for which ".container" classname is generated
 *
 * 'paddings' property uses 'padding' mixin and allows 'inherit' property value.
 * For example 'xs: 0 inherit' will set only top and bottom paddings and 'xs: inherit 0'
 * will set left and right paddings.
 *
 * @demo
 *   <div class="container"></div>
 *   <div class="container container-footer"></div>
 */

$containers: (
    'default': (
        'max-widths': (
            // sm: 480px,
            // md: 720px,
            // lg: 960px,
            // xl: 1140px,
            xxl: 1440px
        ),

        // It's prefered not to set any paddings on default and use
        // modifier instead
        'paddings': (
            // xs: 0,
            // sm: 0,
            // md: 0,
            // lg: 0,
            // xl: 0
        )
    ),

    // Generates 'container-h', a container with left and right paddings
    // which has size of 1 column
    'h': (
        'max-widths': (
            // sm: 480px,
            // md: 720px,
            // lg: 960px,
            // xl: 1140px,
            xxl: 1440px
        ),
        'paddings': (
            xs:  inherit 10px,
            sm:  inherit 10px,
            md:  inherit 20px,
            lg:  inherit 20px,
            xl:  inherit 30px,
            xxl: inherit 30px,
        )
    ),

    // Generates 'container-v', a container with top and bottom paddings
    // which has size of 1 column
    'v': (
        'paddings': (
            xs:  10px inherit,
            sm:  10px inherit,
            md:  20px inherit,
            lg:  20px inherit,
            xl:  30px inherit,
            xxl: 30px inherit,
        )
    ),
);


/**
 * Spacings
 *
 * Settings for spacing between most of the elements
 *
 * @see html/src/stylesheets/components/_blocks.scss
 * @see html/src/stylesheets/components/form/_footer.scss
 * @see html/src/stylesheets/components/form/_group.scss
 * @see html/src/stylesheets/components/text/_typography.scss
 * @see html/src/stylesheets/components/text/_lists.scss
 * @demo
 *   @include margins($spacing);
 *   @include margins($spacing-medium);
 *   @include margins-top($spacing);
 *   @include margins-bottom($spacing);
 *   @include margins-top-bottom($spacing);
 */

$spacing: (
    xs:  10px,
    sm:  10px,
    md:  20px,
    lg:  20px,
    xl:  30px,
    xxl: 30px,
);

$spacing-none: (
    xs:  0,
    sm:  0,
    md:  0,
    lg:  0,
    xl:  0,
    xxl: 0,
);

$spacing-heading: (
    xs:  1.0rem,
    md:  2.0rem
);

$spacing-text: (
    xs:  1.0rem,
    md:  2.0rem
);


