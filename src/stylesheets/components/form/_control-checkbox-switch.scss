/**
 * Checkbox button input as switch control styles
 */

$switch-spacing: 6px;
$switch-spacing-xs: 3px;


.form-control-checkbox--switch {
    align-items: center;
    flex-direction: row-reverse;
    justify-content: space-between;

    .form-control-checkbox__icon {
        position: relative;
        width: var(--spacer-6);
        height: var(--spacer-5);
        border-radius: 200px;
        background: var(--color-disabled);
        border: 0;

        @extend %transition;
        transition-property: background, box-shadow;
        will-change: background, box-shadow;

        &:before {
            content: "";
            background: var(--color-base);
            width: calc(var(--spacer-5) - #{ $switch-spacing * 2 });
            height: calc(var(--spacer-5) - #{ $switch-spacing * 2 });

            position: absolute;
            left: $switch-spacing;
            top: $switch-spacing;
            border-radius: 200px;

            @extend %transition;
            transition-property: transform;
            will-change: transform;

            // Overwrite checkbox
            opacity: 1;
        }
    }
    .form-control-checkbox__label {
        padding: 0 var(--spacer-3) 0 0;
        color: var(--color-heading);

        // Extended hover area
        &:before {
            content: "";
            position: absolute;
            z-index: 1;
            left: calc(var(--spacer-4) * -1);
            top: calc(var(--spacer-4) * -1);
            right: calc(var(--spacer-4) * -1);
            bottom: calc(var(--spacer-4) * -1);
        }

    }

    // Disabled state
    input[disabled] ~ .form-control-checkbox__label {
        cursor: default;
    }
    // input[disabled] ~ &__icon {
    //     background: var(--color-disabled);
    // }

    // Readonly state
    input.readonly ~ .form-control-checkbox__label,
    input[readonly] ~ .form-control-checkbox__label {
        pointer-events: none;
    }

    // Focused
    input {
        @include link-focus-visible () {
            & ~ .form-control-checkbox__icon {
                box-shadow: $link-focus-visible-shadow;
            }
        }
    }

    // Checked state
    .form-control-checkbox__icon.is-checked,
    input:checked ~ .form-control-checkbox__icon {
        background: var(--color-primary);
    }

    .form-control-checkbox__icon.is-checked:before,
    input:checked ~ .form-control-checkbox__icon:before {
        transform: translateX(16px);
    }
}


/**
 * Tiny sized switch
 */

.form-control-checkbox--switch--xs {
    .form-control-checkbox__icon {
        width: var(--spacer-4);
        height: var(--spacer-3);

        &:before {
            width: calc(var(--spacer-3) - #{ $switch-spacing-xs * 2 });
            height: calc(var(--spacer-3) - #{ $switch-spacing-xs * 2 });
            left: $switch-spacing-xs;
            top: $switch-spacing-xs;
        }
    }

    .form-control-checkbox__icon.is-checked:before,
    input:checked ~ .form-control-checkbox__icon:before {
        transform: translateX(8px);
    }
}
